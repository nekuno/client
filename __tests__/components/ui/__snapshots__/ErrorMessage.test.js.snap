// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test ErrorMessage component should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ErrorMessage
    text="Lorem ipsum"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="small errorMessage"
      >
        <div
          className="message"
        >
          Lorem ipsum
        </div>
        <div
          className="icon icon-x crossIcon"
          onClick={[Function]}
        />
      </div>,
      "className": "errorMessageWrapper",
      "style": Object {
        "display": "block",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="message"
          >
            Lorem ipsum
          </div>,
          <div
            className="icon icon-x crossIcon"
            onClick={[Function]}
          />,
        ],
        "className": "small errorMessage",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Lorem ipsum",
            "className": "message",
          },
          "ref": null,
          "rendered": "Lorem ipsum",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "icon icon-x crossIcon",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="small errorMessage"
        >
          <div
            className="message"
          >
            Lorem ipsum
          </div>
          <div
            className="icon icon-x crossIcon"
            onClick={[Function]}
          />
        </div>,
        "className": "errorMessageWrapper",
        "style": Object {
          "display": "block",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="message"
            >
              Lorem ipsum
            </div>,
            <div
              className="icon icon-x crossIcon"
              onClick={[Function]}
            />,
          ],
          "className": "small errorMessage",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Lorem ipsum",
              "className": "message",
            },
            "ref": null,
            "rendered": "Lorem ipsum",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "icon icon-x crossIcon",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
