// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Banner component should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Banner
    buttonText="Ok"
    description="Description"
    icon="icon"
    onClickHandler={[MockFunction]}
    onSkipHandler={[MockFunction]}
    skipText="skip"
    title="Title"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="textWrapper"
          onClick={[Function]}
        >
          <h2
            className="title"
          >
            Title
          </h2>
          <p
            className="description"
          >
            Description
          </p>
        </div>,
        <span
          className="icon icon icon-icon"
          onClick={[Function]}
        />,
        <div
          className="buttonWrapper"
          onClick={[Function]}
        >
          <div
            className="button"
          >
            Ok
          </div>
        </div>,
        <div
          className="skipLink"
          onClick={[Function]}
        >
          skip
        </div>,
      ],
      "className": "banner",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2
              className="title"
            >
              Title
            </h2>,
            <p
              className="description"
            >
              Description
            </p>,
          ],
          "className": "textWrapper",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Title",
              "className": "title",
            },
            "ref": null,
            "rendered": "Title",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Description",
              "className": "description",
            },
            "ref": null,
            "rendered": "Description",
            "type": "p",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "icon icon icon-icon",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="button"
          >
            Ok
          </div>,
          "className": "buttonWrapper",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Ok",
            "className": "button",
          },
          "ref": null,
          "rendered": "Ok",
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "skip",
          "className": "skipLink",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "skip",
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="textWrapper"
            onClick={[Function]}
          >
            <h2
              className="title"
            >
              Title
            </h2>
            <p
              className="description"
            >
              Description
            </p>
          </div>,
          <span
            className="icon icon icon-icon"
            onClick={[Function]}
          />,
          <div
            className="buttonWrapper"
            onClick={[Function]}
          >
            <div
              className="button"
            >
              Ok
            </div>
          </div>,
          <div
            className="skipLink"
            onClick={[Function]}
          >
            skip
          </div>,
        ],
        "className": "banner",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h2
                className="title"
              >
                Title
              </h2>,
              <p
                className="description"
              >
                Description
              </p>,
            ],
            "className": "textWrapper",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Title",
                "className": "title",
              },
              "ref": null,
              "rendered": "Title",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Description",
                "className": "description",
              },
              "ref": null,
              "rendered": "Description",
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "icon icon icon-icon",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="button"
            >
              Ok
            </div>,
            "className": "buttonWrapper",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Ok",
              "className": "button",
            },
            "ref": null,
            "rendered": "Ok",
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "skip",
            "className": "skipLink",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "skip",
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
