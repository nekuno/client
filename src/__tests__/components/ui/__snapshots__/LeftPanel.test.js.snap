// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test LeftPanel component should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LeftPanel
    handleClickClose={[MockFunction]}
    isOpen={false}
  >
    Lorem ipsum
  </LeftPanel>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="leftPanelAbsoluteWrapper"
      >
        <div
          className="leftPanel"
        >
          <div
            className="content"
          >
            Lorem ipsum
          </div>
        </div>
        <div
          className="outsideWrapper"
          onClick={[Function]}
        />
      </div>,
      "className": "leftPanelWrapper",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="leftPanel"
          >
            <div
              className="content"
            >
              Lorem ipsum
            </div>
          </div>,
          <div
            className="outsideWrapper"
            onClick={[Function]}
          />,
        ],
        "className": "leftPanelAbsoluteWrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="content"
            >
              Lorem ipsum
            </div>,
            "className": "leftPanel",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Lorem ipsum",
              "className": "content",
            },
            "ref": null,
            "rendered": "Lorem ipsum",
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "outsideWrapper",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="leftPanelAbsoluteWrapper"
        >
          <div
            className="leftPanel"
          >
            <div
              className="content"
            >
              Lorem ipsum
            </div>
          </div>
          <div
            className="outsideWrapper"
            onClick={[Function]}
          />
        </div>,
        "className": "leftPanelWrapper",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="leftPanel"
            >
              <div
                className="content"
              >
                Lorem ipsum
              </div>
            </div>,
            <div
              className="outsideWrapper"
              onClick={[Function]}
            />,
          ],
          "className": "leftPanelAbsoluteWrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="content"
              >
                Lorem ipsum
              </div>,
              "className": "leftPanel",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Lorem ipsum",
                "className": "content",
              },
              "ref": null,
              "rendered": "Lorem ipsum",
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "outsideWrapper",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Test LeftPanel component should render correctly 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LeftPanel
    handleClickClose={[MockFunction]}
    isOpen={true}
  >
    Lorem ipsum
  </LeftPanel>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="leftPanelAbsoluteWrapper"
      >
        <div
          className="open leftPanel"
        >
          <div
            className="content"
          >
            Lorem ipsum
          </div>
        </div>
        <div
          className="open outsideWrapper"
          onClick={[Function]}
        />
      </div>,
      "className": "leftPanelWrapper",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="open leftPanel"
          >
            <div
              className="content"
            >
              Lorem ipsum
            </div>
          </div>,
          <div
            className="open outsideWrapper"
            onClick={[Function]}
          />,
        ],
        "className": "leftPanelAbsoluteWrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="content"
            >
              Lorem ipsum
            </div>,
            "className": "open leftPanel",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Lorem ipsum",
              "className": "content",
            },
            "ref": null,
            "rendered": "Lorem ipsum",
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "open outsideWrapper",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="leftPanelAbsoluteWrapper"
        >
          <div
            className="open leftPanel"
          >
            <div
              className="content"
            >
              Lorem ipsum
            </div>
          </div>
          <div
            className="open outsideWrapper"
            onClick={[Function]}
          />
        </div>,
        "className": "leftPanelWrapper",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="open leftPanel"
            >
              <div
                className="content"
              >
                Lorem ipsum
              </div>
            </div>,
            <div
              className="open outsideWrapper"
              onClick={[Function]}
            />,
          ],
          "className": "leftPanelAbsoluteWrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="content"
              >
                Lorem ipsum
              </div>,
              "className": "open leftPanel",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Lorem ipsum",
                "className": "content",
              },
              "ref": null,
              "rendered": "Lorem ipsum",
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "open outsideWrapper",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
